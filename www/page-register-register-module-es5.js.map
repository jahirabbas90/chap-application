{"version":3,"sources":["webpack:///src/app/page/register/register.page.ts","webpack:///src/app/page/register/register.page.html","webpack:///src/app/page/register/register-routing.module.ts","webpack:///src/app/page/register/register.page.scss","webpack:///src/app/page/register/register.module.ts"],"names":["RegisterPage","fb","actRoute","router","alertController","loadingController","chatService","_connecter","datepipe","submitted","btnHide","paramMap","subscribe","params","company","get","credentialForm","group","email","required","password","minLength","nickname","invalid","obs","findUser","value","exsist","res","data","length","alert","signup","then","user","create","header","message","buttons","present","err","valid","presentToast","time","Date","_id","getTime","Math","floor","random","ar","name","personal_chats","chat_id","uid","createNewUser","selector","template","routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations"],"mappings":"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","file":"page-register-register-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { EnDataService } from '../../services/en-data.service';\nimport { forkJoin } from 'rxjs';\n\nimport { MyConnecterService } from '../../services/my-connecter.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  credentialForm: FormGroup;\n  submitted: boolean = false;\n  company: string;\n  btnHide: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private chatService: EnDataService,\n\n    private _connecter: MyConnecterService,\n    public datepipe: DatePipe\n  ) {\n    this.actRoute.paramMap.subscribe(params => {\n      this.company = params.get('company')\n    });\n  }\n \n  ngOnInit() {\n    // this.credentialForm = this.fb.group({\n    //   email: ['ankit@webmaddy.com', [Validators.required, Validators.email]],\n    //   password: ['123456', [Validators.required, Validators.minLength(6)]],\n    //   uid: ['4']\n    // });\n\n    this.credentialForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      nickname: ['', [Validators.required, Validators.minLength(2)]],\n      company: [this.company]\n    });\n    \n  }\n   \n  async signUp() {\n    // console.log(this.credentialForm.value)\n    // return;\n    if(this.credentialForm.invalid) {\n      return;\n    }\n\n    let obs = this.chatService.findUser(this.credentialForm.value.email);\n    let exsist = 0;\n    forkJoin(obs).subscribe(res => {\n      for (let data of res) {\n        if (data.length > 0) {\n          \n          alert('Email already exsist')\n\n          exsist = 1;\n        }\n      }\n      if(exsist == 0){\n        this.btnHide = true;        \n        this.chatService\n        .signup(this.credentialForm.value)\n        .then(\n          \n          async (user) => {\n            this.btnHide = false;\n            //this.router.navigateByUrl('/chat', { replaceUrl: true });\n            const alert = await this.alertController.create({\n              header: 'Sign up success',\n              message: 'User created ',\n              buttons: ['OK'],\n            });\n  \n            await alert.present();\n\n          },\n          async (err) => {\n            this.btnHide = false;\n            const alert = await this.alertController.create({\n              header: 'Sign up failed',\n              message: err.message,\n              buttons: ['OK'],\n            });\n  \n            await alert.present();\n          }\n        );\n\n      }\n      \n    });\n    \n  }\n\n  get email() {\n    return this.credentialForm.get('email');\n  }\n  \n  get password() {\n    return this.credentialForm.get('password');\n  }\n\n  get nickname() {\n    return this.credentialForm.get('nickname');\n  }\n\n  createdUser() {\n    if(!this.credentialForm.valid) {\n      this._connecter.presentToast('Invalid form value')\n      return;\n    }\n\n    let time = new Date();\n    var _id = time.getTime()+Math.floor(Math.random());\n\n    var ar = {\n      name: this.credentialForm.value.nickname,\n      email:  this.credentialForm.value.email,\n      password: this.credentialForm.value.password,\n      personal_chats: [\n        {\n          chat_id: null,\n          uid: _id\n        }\n      ],\n      uid: _id\n    };\n    // console.log(ar)\n    this._connecter.createNewUser(ar, this.credentialForm.value.email);\n    \n  }\n\n}\n","export default \"<ion-header [translucent]=\\\"true\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <!-- <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button auto-hide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons> -->\\n    <ion-title>\\n      Sign Up\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div class=\\\"auth-box\\\">\\n    <div class=\\\"title-header\\\">\\n      <img src=\\\"assets/avatar.svg\\\" alt=\\\"\\\">\\n    </div>\\n\\n    <form [formGroup]=\\\"credentialForm\\\" >\\n\\n      <ion-item class=\\\"form-control ion-no-padding\\\">\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input\\n          placeholder=\\\"Email address\\\"\\n          formControlName=\\\"email\\\"\\n          autofocus=\\\"true\\\"\\n          clearInput=\\\"true\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"(email.dirty || email.touched) && email.errors\\\" class=\\\"errors\\\">\\n        <span *ngIf=\\\"email.errors?.required\\\">Email is required</span>\\n        <span *ngIf=\\\"email.errors?.email\\\">Email is invalid</span>\\n      </div>\\n      \\n      <ion-item class=\\\"form-control ion-no-padding\\\">\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input\\n          placeholder=\\\"Password\\\"\\n          type=\\\"password\\\"\\n          formControlName=\\\"password\\\"\\n          clearInput=\\\"true\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"(password.dirty || password.touched) && password.errors\\\" class=\\\"errors\\\">\\n        <span *ngIf=\\\"password.errors?.required\\\">Password is required</span>\\n        <span *ngIf=\\\"password.errors?.minlength\\\">Password needs to be 6 characters</span>\\n      </div>\\n\\n      <ion-item class=\\\"form-control ion-no-padding\\\">\\n        <ion-label position=\\\"floating\\\">Nickname</ion-label>\\n        <ion-input\\n          placeholder=\\\"Nickname\\\"\\n          type=\\\"text\\\"\\n          formControlName=\\\"nickname\\\"\\n          clearInput=\\\"true\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"(nickname.dirty || nickname.touched) && nickname.errors\\\" class=\\\"errors\\\">\\n        <span *ngIf=\\\"nickname.errors?.required\\\">Nickname is required</span>\\n        <span *ngIf=\\\"nickname.errors?.minlength\\\">Nickname needs to be 2 characters</span>\\n      </div>\\n\\n      <ion-button fill=\\\"clear\\\" expand=\\\"block\\\" class=\\\"btn-link-light mb15 mt30\\\" [routerLink]=\\\"['/en-login']\\\">Login</ion-button>\\n\\n      <ion-button expand=\\\"block\\\" color=\\\"primary\\\" class=\\\"mb15\\\" mode=\\\"md\\\" (click)=\\\"createdUser()\\\" *ngIf=\\\"!btnHide\\\">Sign Up</ion-button>\\n      <p *ngIf=\\\"btnHide\\\">Please wait...</p>\\n\\n    </form>\\n  </div>\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","export default \".errors {\\n  font-size: small;\\n  color: #c04848;\\n  padding-left: 15px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n\\n.auth-box {\\n  padding: 2em;\\n}\\n\\n.auth-box .title-header {\\n  padding: 2em 0;\\n  text-align: center;\\n}\\n\\n.item-native {\\n  -webkit-padding-start: initial;\\n          padding-inline-start: initial;\\n}\\n\\n.mb15 {\\n  margin-bottom: 15px;\\n}\\n\\n.mt30 {\\n  margin-top: 30px;\\n}\\n\\n.mb30 {\\n  margin-bottom: 30px;\\n}\\n\\nion-input {\\n  --padding-end: 0px;\\n}\\n\\n.input-note {\\n  color: red;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxyZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7QUFDRjs7QUFBRTtFQUNJLGNBQUE7RUFDQSxrQkFBQTtBQUVOOztBQUNBO0VBQ0UsOEJBQUE7VUFBQSw2QkFBQTtBQUVGOztBQUFBO0VBQ0UsbUJBQUE7QUFHRjs7QUFEQTtFQUNFLGdCQUFBO0FBSUY7O0FBRkE7RUFDRSxtQkFBQTtBQUtGOztBQUhBO0VBQ0Usa0JBQUE7QUFNRjs7QUFKQTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQU9GIiwiZmlsZSI6InJlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvcnMge1xyXG4gIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgY29sb3I6IHJnYigxOTIsIDcyLCA3Mik7XHJcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDVweDtcclxufVxyXG5cclxuLmF1dGgtYm94e1xyXG4gIHBhZGRpbmc6IDJlbTtcclxuICAudGl0bGUtaGVhZGVye1xyXG4gICAgICBwYWRkaW5nOiAyZW0gMDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxufVxyXG4uaXRlbS1uYXRpdmV7XHJcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IGluaXRpYWw7XHJcbn1cclxuLm1iMTV7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufVxyXG4ubXQzMHtcclxuICBtYXJnaW4tdG9wOiAzMHB4O1xyXG59XHJcbi5tYjMwe1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuaW9uLWlucHV0IHtcclxuICAtLXBhZGRpbmctZW5kOiAwcHg7XHJcbn1cclxuLmlucHV0LW5vdGUge1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgZm9udC1zaXplOiAwLjhlbTtcclxufSJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n"]}