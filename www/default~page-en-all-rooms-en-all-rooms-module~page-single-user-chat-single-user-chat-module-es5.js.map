{"version":3,"sources":["webpack:///src/app/page/en-all-rooms/en-all-rooms.page.scss","webpack:///src/app/page/en-all-rooms/en-all-rooms.page.ts","webpack:///src/app/page/en-all-rooms/en-all-rooms.page.html"],"names":["EnAllRoomsPage","router","_connecter","alertCtrl","firestore","platform","_location","fcm","_allUsr","_visibleUsr","chatIdArray","coversationList","message_count","ready","then","onNotification","subscribe","data","wasTapped","console","log","bleep","Audio","src","play","onTokenRefresh","token","authUser$","_authUsr","_userNickName","name","_userid","id","Object","keys","length","navigate","fcm_token","warn","updateUserFcmToken","localStorage","getItem","getAllPosts","_allRoom","_filteredRoom","filter","eachVal","opt","visible_name","some","uid","undefined","_visibleNameArray","index","visibleArray","push","element","unread","collection","ref","orderBy","valueChanges","idField","removeAuth","evt","searchTerm","srcElement","value","toLowerCase","indexOf","event","setTimeout","target","complete","array","userListBackup","allGroups","groupName","groupFriends","create","cssClass","header","message","alert","present","backButton","subscribeWithPriority","processNextHandler","isCurrentPathEqualTo","showExitConfirm","back","getTop","r","navigator","exitApp","e","backdropDismiss","buttons","text","role","handler","selector","template","StarPipe","_sanitizer","group","title","arr","filteredArray","itm","NotificationPipe"],"mappings":"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","file":"default~page-en-all-rooms-en-all-rooms-module~page-single-user-chat-single-user-chat-module-es5.js","sourcesContent":["export default \"ion-list {\\n  padding: 0;\\n}\\n\\nion-badge {\\n  border-radius: 10px;\\n}\\n\\nion-toolbar {\\n  border-bottom-width: 0;\\n}\\n\\nion-button[shape=circle] {\\n  --border-radius: 50%;\\n  width: 20px;\\n  height: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxlbi1hbGwtcm9vbXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQUNGOztBQUNBO0VBQ0UsbUJBQUE7QUFFRjs7QUFBQTtFQUNFLHNCQUFBO0FBR0Y7O0FBQUE7RUFDRSxvQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FBR0YiLCJmaWxlIjoiZW4tYWxsLXJvb21zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1saXN0IHtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcbmlvbi1iYWRnZSB7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5pb24tdG9vbGJhciB7XHJcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcclxufVxyXG5cclxuaW9uLWJ1dHRvbltzaGFwZT1jaXJjbGVdIHtcclxuICAtLWJvcmRlci1yYWRpdXM6IDUwJTtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuIl19 */\";","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MyConnecterService } from '../../services/my-connecter.service';\nimport { Platform, AlertController } from '@ionic/angular';\nimport { FCM } from 'cordova-plugin-fcm-with-dependecy-updated/ionic/ngx';\n\n\n\n@Component({\n  selector: 'app-en-all-rooms',\n  templateUrl: './en-all-rooms.page.html',\n  styleUrls: ['./en-all-rooms.page.scss'],\n})\nexport class EnAllRoomsPage implements OnInit {\n\n  _authUsr: any;\n  _allRoom: any;\n  _filteredRoom:any;\n  _userNickName:any;\n  _userid:any;\n  allChatUser:any;\n  userListBackup :any;\n  allGroups:any;\n  _allUsr = [];\n  _visibleNameArray :any;\n  _visibleUsr = [];\n  groupsListBackup:any;\n  chatIdArray=[];\n  coversationList=[];\n  message_count: number=0;\n\n  constructor(private router: Router,\n    private _connecter: MyConnecterService,\n    private alertCtrl: AlertController,\n    private firestore:AngularFirestore,\n    private platform:Platform,\n    private _location: Location,\n    private fcm: FCM \n    ) {\n      this.platform.ready()\n      .then(() => {\n        this.fcm.onNotification().subscribe(data => {\n          if (data.wasTapped) {\n            console.log(\"Received in background\");\n            // alert(\"Received in background\");\n          } else {\n            console.log(\"Received in foreground\");\n            var bleep = new Audio();\n            bleep.src = './assets/chatTone.mp3';\n            bleep.play();\n            // alert(\"Received in foreground\");\n          };\n        });\n  \n        this.fcm.onTokenRefresh().subscribe(token => {\n          // alert(\"refresh_token :\"+token);  \n        });\n      })\n\n    _connecter.authUser$.subscribe(data => {\n      this._authUsr = data;\n      this._userNickName=this._authUsr.name;\n      this._userid=this._authUsr.id;\n      //check if user FCMToken register on not\n\n      if(Object.keys(this._authUsr).length === 0) {\n        this.router.navigate(['/en-login']);\n      }\n      else{\n        // this.getAllChat();\n      }\n    });\n\n    if (this._authUsr.fcm_token == null) {\n      console.warn(\"null\")\n      console.warn(\"\"+this._authUsr.fcm_token)\n      this._connecter.updateUserFcmToken(localStorage.getItem(\"user_id\"),\"\"+localStorage.getItem(\"user_fcm_token\"));\n    } else if (this._authUsr.fcm_token!=null && this._authUsr.fcm_token!=localStorage.getItem(\"user_fcm_token\")) {\n      console.warn(\"not_null\")\n      this._connecter.updateUserFcmToken(localStorage.getItem(\"user_id\"),localStorage.getItem(\"user_fcm_token\"));\n    }\n\n  }\n\n  ngOnInit() {\n\n    this.getAllPosts().subscribe((data) => {\n      if (data.length>0) { \n        // console.log(data);\n\n        this._allRoom=data;\n        this._filteredRoom = data.filter(eachVal => {\n          let opt = eachVal.visible_name.some((\n            { uid }) => uid == this._authUsr.id);\n          return opt;\n        })\n\n        // console.warn(\"myData :\" + JSON.stringify(this._filteredRoom))\n        this._allRoom=this._filteredRoom;\n\n        if (this._allRoom!=undefined) {\n          this._visibleNameArray=[];\n\n          for (let index = 0; index < this._allRoom.length; index++) {\n            const visibleArray = this._allRoom[index].visible_name;\n            this._visibleNameArray.push(visibleArray);\n          }\n          // console.warn(\"visibleName  :\" + JSON.stringify(this._visibleNameArray))\n\n           for (let index = 0; index < this._visibleNameArray.length; index++) {\n              const element = this._visibleNameArray[index];\n              if (element.uid===this._userid) {\n                this.message_count=element.unread;\n              }\n            }\n        }\n        \n        \n        // this.coversationList=data;\n        /* for (let index = 0; index < data.length; index++) {\n          this.coversationList.push(data[index]['visible_name']);\n        } */\n\n        /* for (let index = 0; index < this.coversationList.length; index++) {\n          const element = this.coversationList[index];\n          console.log(\"visible_user_array_index :\" + JSON.stringify(element));              \n        } */\n\n        /* console.log(\"userId :\" + this._authUsr.id);\n        console.log(this.coversationList);\n        for (let index = 0; index < this.coversationList.length; index++) {\n          const element1 = this.coversationList[index];\n          console.log(\"visible_user_array :\" + JSON.stringify(element1));\n          console.log(\"userId :\" + this._authUsr.id);\n        } */\n      }\n    });\n\n    \n   \n  }\n\n\n  /* getAllChat() {    \n    this._allRoom = this._connecter.getGroups(this._authUsr.id);\n  } */\n\n  getAllPosts(): Observable<any> {\n    return this.firestore.collection<any>(\"conversations\", ref => ref\n      .orderBy('ceatedAt', 'desc')).valueChanges({ idField: 'id' });\n  }\n  \n  signOut() {\n    this._connecter.removeAuth();\n  }\n\n  async filterList(evt) {\n    const searchTerm = evt.srcElement.value;\n    // console.log(this._allRoom)\n    console.log(searchTerm)\n\n    if (!searchTerm) {\n      this._filteredRoom=this._allRoom;\n      return;\n    }\n\n    this._filteredRoom = this._allRoom.filter(eachVal => {\n      let opt = eachVal.visible_name.some((\n        { name }) => name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\n      return opt;\n    })\n    /* this.userListBackup = this.allGroups.filter(item => {\n      return item.name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\n    }); */\n\n  }\n\n  doRefresh(event) {\n    console.log('Begin async operation');\n    // this.getAllChat();\n    setTimeout(() => {\n      console.log('Async operation has ended');\n      event.target.complete();\n    }, 2000);\n  }\n\n  getAllUser(value, array) {\n    for (let index = 0; index < array.length; index++) {\n      this.userListBackup = this.userListBackup.push(value)\n\n    }\n\n    this.allGroups = this.userListBackup;\n  }\n\n  /* getAllChatUser(value){\n    this.allChatUser=this.allChatUser.push(value);\n  } */\n\n  async showPop(groupName,groupFriends) {\n    const alert = await this.alertCtrl.create({\n      cssClass: 'my-custom-class',\n      header: '' + groupName,\n      message: '' + groupFriends\n      \n    });\n\n    await alert.present();\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n    });\n\n    this.platform.backButton.subscribeWithPriority(10, (processNextHandler) => {\n      console.log('Back press handler!');\n      if (this._location.isCurrentPathEqualTo('/en-all-rooms')) {\n\n        // Show Exit Alert!\n        console.log('Show Exit Alert!');\n        this.showExitConfirm();\n        processNextHandler();\n      } else {\n\n        // Navigate to back page\n        console.log('Navigate to back page');\n        this._location.back();\n\n      }\n\n    });\n\n    this.platform.backButton.subscribeWithPriority(5, () => {\n      console.log('Handler called to force close!');\n      this.alertCtrl.getTop().then(r => {\n        if (r) {\n          navigator['app'].exitApp();\n        }\n      }).catch(e => {\n        console.log(e);\n      })\n    });\n\n  }\n\n\n  showExitConfirm() {\n    this.alertCtrl.create({\n      header: 'Close App',\n      message: 'Do you want to close the app?',\n      backdropDismiss: false,\n      buttons: [{\n        text: 'Stay',\n        role: 'cancel',\n        handler: () => {\n          console.log('Application exit prevented!');\n        }\n      }, {\n        text: 'Exit',\n        handler: () => {\n          navigator['app'].exitApp();\n        }\n      }]\n    })\n      .then(alert => {\n        alert.present();\n      });\n  }\n\n\n}\n\n\nimport { Pipe, PipeTransform } from '@angular/core';  \nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'; \nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { first, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { NativeAudio } from '@ionic-native/native-audio';\n@Pipe({  \n  name: 'starPipe'  \n})  \n  \nexport class StarPipe implements PipeTransform {  \n  constructor(private _sanitizer: DomSanitizer) { }  \n  \n  transform(value: any, event?: number): SafeHtml { \n    if(value) {    \n      if(value.group) {\n        return value.title;\n      }\n      else {\n        var arr = [];\n        if (value.visible_name) {\n          var filteredArray = value.visible_name.filter(function(itm){\n            return itm.uid == event;\n          });\n\n          if(filteredArray.length) {\n            return filteredArray[0].name;\n          } \n        }\n        \n        \n      }\n    }\n    return null;\n \n  }  \n} \n\n@Pipe({  \n  name: 'notificationPipe'  \n})  \n  \nexport class NotificationPipe implements PipeTransform {  \n  constructor(private _sanitizer: DomSanitizer) { }  \n  \n  transform(value: any, event?: number, group?: any): SafeHtml { \n    if(value) { \n       \n      if(group) {\n        var filteredArray = value.filter(function(itm){\n          return itm.uid == event;\n        });\n        \n        if(filteredArray.length) {\n          return filteredArray[0].unread > 0 ? filteredArray[0].unread : null;\n        }\n      }\n      else {\n        var arr = [];\n        var filteredArray = value.filter(function(itm){\n          return itm.uid != event;\n        });\n        if(filteredArray.length) {\n          return filteredArray[0].unread > 0 ? filteredArray[0].unread : null;\n        }\n      }\n    }\n    return null;\n \n  }  \n} \n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar >\\n    \\n    <ion-title>All Chats</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <!-- <ion-button routerLink=\\\"/en-create-room\\\"> -->\\n      <ion-button routerLink=\\\"/en-new-individual-chat\\\">\\n        <ion-icon name=\\\"create-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"signOut()\\\">\\n        <ion-icon name=\\\"log-out\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-searchbar  showcancelbutton=\\\"\\\"\\n    (ionInput)=\\\"filterList($event)\\\"\\n    ></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n\\n  <ion-list *ngIf=\\\"_allRoom\\\"> \\n    <!-- <ion-item-sliding *ngFor=\\\"let group of groupsListBackup\\\">\\n      <ion-item button detail='false' [routerLink]=\\\"['/', 'en-chat',group.id]\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img src=\\\"assets/avatar.svg\\\">\\n        </ion-avatar>\\n        <ion-label>\\n          <h3>{{group.title }}</h3>          \\n          <p>{{ group.last_text }}</p>\\n        </ion-label>\\n        \\n      </ion-item>\\n    </ion-item-sliding> -->\\n\\n   <!--  <ion-item button detail='false' *ngFor=\\\"let room of _allRoom  | async\\\" [routerLink]=\\\"['/', 'single-user-chat', (room | async)?.id || 0]\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"assets/avatar.svg\\\">\\n      </ion-avatar>\\n\\n      <ion-label>\\n        <h3>{{ room| async | starPipe: _authUsr.id }}</h3>          \\n        <p>{{ (room | async)?.last_message || null }}</p>\\n      </ion-label>\\n      \\n    </ion-item>\\n -->\\n\\n<ion-item button detail='false' *ngFor=\\\"let room of _filteredRoom\\\"\\n  [routerLink]=\\\"['/', 'single-user-chat', room.id]\\\">\\n  <ion-avatar slot=\\\"start\\\">\\n    <img src=\\\"assets/avatar.svg\\\">\\n  </ion-avatar>\\n\\n  <ion-badge color=\\\"primary\\\" slot=\\\"end\\\">{{ room.visible_name  |notificationPipe: _authUsr.id: room.group }}</ion-badge>\\n\\n  <ion-label>\\n    <h3>{{ room  |starPipe: _authUsr.id }}</h3>\\n    <p>{{ room.last_message}}</p>\\n  </ion-label>\\n</ion-item>\\n\\n\\n  </ion-list>\\n  \\n\\n</ion-content>\\n\\n\";"]}