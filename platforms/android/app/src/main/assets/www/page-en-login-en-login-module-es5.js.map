{"version":3,"sources":["webpack:///src/app/page/en-login/en-login.module.ts","webpack:///src/app/page/en-login/en-login.page.ts","webpack:///src/app/page/en-login/en-login.page.scss","webpack:///src/app/page/en-login/en-login.page.html","webpack:///src/app/page/en-login/en-login-routing.module.ts"],"names":["EnLoginPageModule","imports","declarations","EnLoginPage","fb","router","alertController","loadingController","chatService","_connecter","fcm","platform","ready","then","onNotification","subscribe","data","wasTapped","console","log","getToken","onTokenRefresh","token","localStorage","setItem","pushSetup","authUser$","_authUsr","id","Object","keys","length","navigate","credentialForm","group","email","required","password","minLength","loading","present","signup","value","user","dismiss","create","header","message","buttons","alert","err","invalid","signIn","res","navigateByUrl","get","inputs","name","placeholder","text","role","handler","resetPw","inputAlert","cssClass","type","passcode","valid","presentToast","userLogin","subscribeToTopic","unsubscribeFromTopic","is","requestPushPermission","hasPermission","selector","template","routes","path","component","EnLoginPageRoutingModule","forChild","exports"],"mappings":"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","file":"page-en-login-en-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EnLoginPageRoutingModule } from './en-login-routing.module';\n\nimport { EnLoginPage } from './en-login.page';\n// import { Push } from '@awesome-cordova-plugins/push';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EnLoginPageRoutingModule,\n    // Push\n  ],\n  declarations: [EnLoginPage]\n})\nexport class EnLoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController, Platform, ToastController } from '@ionic/angular';\nimport { EnDataService } from '../../services/en-data.service';\nimport { MyConnecterService } from '../../services/my-connecter.service';\n// import { FCM } from '@ionic-native/fcm/ngx';\nimport { FCM } from 'cordova-plugin-fcm-with-dependecy-updated/ionic/ngx';\n\n\n@Component({\n  selector: 'app-en-login',\n  templateUrl: './en-login.page.html',\n  styleUrls: ['./en-login.page.scss'],\n})\nexport class EnLoginPage implements OnInit {\n\n  credentialForm: FormGroup;\n  _authUsr: any;\n  hasPermission: any;\n  token: string;\n \n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private chatService: EnDataService, \n    private _connecter: MyConnecterService,\n    private fcm: FCM, \n    public platform: Platform  ) {\n\n      this.platform.ready()\n      .then(() => {\n        this.fcm.onNotification().subscribe(data => {\n          if (data.wasTapped) {\n            console.log(\"Received in background\");\n            // alert(\"Received in background\");\n          } else {\n            console.log(\"Received in foreground\");\n            // alert(\"Received in foreground\");\n          };\n        });\n\n        this.getToken();\n\n        this.fcm.onTokenRefresh().subscribe(token => {\n          // alert(\"refresh_token :\"+token);\n          localStorage.setItem(\"user_fcm_token\",\"\"+token);      \n\n        });\n      })\n      this.pushSetup();\n\n    _connecter.authUser$.subscribe(data => {\n      this._authUsr = data;\n      console.log(this._authUsr)\n      localStorage.setItem(\"user_id\",\"\"+this._authUsr.id);\n      if(Object.keys(this._authUsr).length === 0) {}\n      else{\n        this.router.navigate(['/en-all-rooms']);\n      }\n    });\n  }\n \n  ngOnInit() {    \n    //Get User FCM Token\n    // this.subscribeToTopic();\n    // this.getToken();\n\n    this.credentialForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  async signUp() {\n    return;\n    const loading = await this.loadingController.create();\n    await loading.present();\n    this.chatService\n      .signup(this.credentialForm.value)\n      .then(\n        async (user) => {\n          loading.dismiss();\n          //this.router.navigateByUrl('/chat', { replaceUrl: true });\n\n          const alert = await this.alertController.create({\n            header: 'Sign up success',\n            message: 'User created ',\n            buttons: ['OK'],\n          });\n \n          await alert.present();\n\n        },\n        async (err) => {\n          loading.dismiss();\n          const alert = await this.alertController.create({\n            header: 'Sign up failed',\n            message: err.message,\n            buttons: ['OK'],\n          });\n \n          await alert.present();\n        }\n      );\n  }\n  \n  async signIn() {\n    if(this.credentialForm.invalid) return;\n    \n    const loading = await this.loadingController.create();\n    await loading.present(); \n\n\n    this.chatService.signIn(this.credentialForm.value).then((res) => {\n      console.log(res['user']['uid']);\n      localStorage.setItem('currentUser', res['user']['uid']);\n      loading.dismiss();\n      this.router.navigateByUrl('/en-all-rooms');\n      // this.router.navigateByUrl('/en-new-individual-chat');\n    }, async (err) => {\n      loading.dismiss();\n      let alert = await this.alertController.create({\n        header: 'Error',\n        message: err.message,\n        buttons: ['OK']\n      });\n      await alert.present();\n    })\n  }\n \n  // Easy access for form fields\n  get email() {\n    return this.credentialForm.get('email');\n  }\n  \n  get password() {\n    return this.credentialForm.get('password');\n  }\n  async openReset() {\n    let inputAlert = await this.alertController.create({\n      header: 'Reset Password',\n      inputs: [\n        {\n          name: 'email',\n          placeholder: 'Email'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Reset',\n          handler: data => {\n            this.resetPw(data.email);\n          }\n        }\n      ]\n    });\n    inputAlert.present();\n  }\n\n  resetPw(email) {\n    // this.chatService.resetPw(email).then(async (res) => {\n    //   let toast = await this.toastCtrl.create({\n    //     duration: 3000,\n    //     message: 'Success! Check your Emails for more information.'\n    //   });\n    //   toast.present();\n    // }, async (err) => {\n    //   let alert = await this.alertController.create({\n    //     header: 'Error',\n    //     message: err.message,\n    //     buttons: ['OK']\n    //   });\n    //   alert.present();\n    // });\n  }\n  \n  async confirmPasscode() {\n\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Unauthorized!',\n      inputs: [\n        {\n          name: 'passcode',\n          type: 'text',\n          placeholder: 'Enter your passcode'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: (data) => {\n            // console.log(data.passcode);\n            if(data.passcode == 'new') {\n              this.router.navigateByUrl('/en-register');\n            }\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  checkLogin() {\n    if(!this.credentialForm.valid) {\n      this._connecter.presentToast('Invalid form value!');\n      return;\n    }\n    this._connecter.userLogin(this.credentialForm.value.email, this.credentialForm.value.password);\n  }\n\n\n  subscribeToTopic() {\n    this.fcm.subscribeToTopic('enappd');\n  }\n  getToken() {\n    // alert(1)\n    this.fcm.getToken().then(token => {\n      // alert(JSON.stringify(token));\n      // alert(1)\n      localStorage.setItem(\"user_fcm_token\",\"\"+token);      \n      // localStorage.setItem(\"user_fcm_token\",\"1234567890\");      \n\n    });\n  }\n  unsubscribeFromTopic() {\n    this.fcm.unsubscribeFromTopic('enappd');\n  }\n\n  private async pushSetup() {\n    await this.platform.ready();\n\n    console.log('FCM SETUP INIT');\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    console.log('IN CORDOVA');\n\n    this.hasPermission = await this.fcm.requestPushPermission();\n    console.log('CHECK hasPermission:', this.hasPermission);\n\n    this.token = await this.fcm.getToken();\n    // alert('CHECK getToken: ' + this.token);\n    localStorage.setItem(\"user_fcm_token\",\"\"+this.token);\n\n    /* console.log('ON NOTIFICATION SUBSCRIBE');\n    this.fcm\n      .onTokenRefresh()\n      .subscribe((newToken) => console.log('NEW TOKEN:', newToken));\n    this.fcm\n      .onNotification()\n      .subscribe((payload: object) => console.log('ON NOTIFICATION:', payload)); */\n  }\n\n}\n\n\n/* this.platform.ready().then(() => {\n      this.fcm.getToken().then(token => {\n        localStorage.setItem(\"user_fcm_token\",\"\"+token);      \n        console.log(token);\n        alert(token);\n        this.fcm.onNotification().subscribe(data => {\n          console.log(data);\n          if (data.wasTapped) {\n            console.log('Received in background');\n          } else {\n            console.log('Received in foreground');\n          }\n        });      \n    \n        // refresh the FCM token\n        this.fcm.onTokenRefresh().subscribe(token => {\n          console.log(token);\n        });\n      });\n    }); */","export default \".errors {\\n  font-size: small;\\n  color: #cc5656;\\n  padding-left: 15px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n\\n.auth-box {\\n  padding: 2em;\\n}\\n\\n.auth-box .title-header {\\n  padding: 2em 0;\\n  text-align: center;\\n}\\n\\n.item-native {\\n  -webkit-padding-start: initial;\\n          padding-inline-start: initial;\\n}\\n\\n.mb15 {\\n  margin-bottom: 15px;\\n}\\n\\n.mt30 {\\n  margin-top: 30px;\\n}\\n\\n.mb30 {\\n  margin-bottom: 30px;\\n}\\n\\nion-input {\\n  --padding-end: 0px;\\n}\\n\\n.input-note {\\n  color: red;\\n  font-size: 0.8em;\\n}\\n\\n.color-bg {\\n  --ion-background-color: #59EEE4;\\n}\\n\\n.btn-pink-color button {\\n  background: transparent;\\n}\\n\\n.btn-pink-color {\\n  --background: var(--ion-color-btn);\\n  color: #fff;\\n}\\n\\n.content-area {\\n  padding: 1rem;\\n}\\n\\n.content-area .login-img {\\n  max-width: 70%;\\n  margin-top: 10%;\\n}\\n\\n.content-area h2 {\\n  margin-bottom: 0.4em;\\n}\\n\\n.content-area p {\\n  margin-bottom: 0px;\\n  margin-top: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxlbi1sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGNBQUE7RUFFQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUFBSjs7QUFFQTtFQUNFLFlBQUE7QUFDRjs7QUFBRTtFQUNJLGNBQUE7RUFDQSxrQkFBQTtBQUVOOztBQUNBO0VBQ0UsOEJBQUE7VUFBQSw2QkFBQTtBQUVGOztBQUFBO0VBQ0UsbUJBQUE7QUFHRjs7QUFEQTtFQUNFLGdCQUFBO0FBSUY7O0FBRkE7RUFDRSxtQkFBQTtBQUtGOztBQUhBO0VBQ0Usa0JBQUE7QUFNRjs7QUFKQTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQU9GOztBQUxBO0VBQ0UsK0JBQUE7QUFRRjs7QUFMSTtFQUNJLHVCQUFBO0FBUVI7O0FBSEE7RUFDSSxrQ0FBQTtFQUNBLFdBQUE7QUFNSjs7QUFIQTtFQUNJLGFBQUE7QUFNSjs7QUFMSTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FBT1I7O0FBTEk7RUFDSSxvQkFBQTtBQU9SOztBQUxJO0VBQ0ksa0JBQUE7RUFDQSxlQUFBO0FBT1IiLCJmaWxlIjoiZW4tbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9ycyB7XHJcbiAgICBmb250LXNpemU6IHNtYWxsO1xyXG4gICAgY29sb3I6IHJnYigyMDQsIDg2LCA4Nik7XHJcbiAgICAvLyBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xyXG59XHJcbi5hdXRoLWJveHtcclxuICBwYWRkaW5nOiAyZW07XHJcbiAgLnRpdGxlLWhlYWRlcntcclxuICAgICAgcGFkZGluZzogMmVtIDA7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbn1cclxuLml0ZW0tbmF0aXZle1xyXG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiBpbml0aWFsO1xyXG59XHJcbi5tYjE1e1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuLm10MzB7XHJcbiAgbWFyZ2luLXRvcDogMzBweDtcclxufVxyXG4ubWIzMHtcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbmlvbi1pbnB1dCB7XHJcbiAgLS1wYWRkaW5nLWVuZDogMHB4O1xyXG59XHJcbi5pbnB1dC1ub3RlIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtc2l6ZTogMC44ZW07XHJcbn1cclxuLmNvbG9yLWJne1xyXG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6ICM1OUVFRTQ7XHJcbn1cclxuLmJ0bi1waW5rLWNvbG9ye1xyXG4gICAgYnV0dG9uIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5idG4tcGluay1jb2xvciB7XHJcbiAgICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1idG4pO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5jb250ZW50LWFyZWEge1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICAgIC5sb2dpbi1pbWcge1xyXG4gICAgICAgIG1heC13aWR0aDogNzAlO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwJTtcclxuICAgIH1cclxuICAgIGgyIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOjAuNGVtO1xyXG4gICAgfVxyXG4gICAgcCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIH1cclxufSJdfQ== */\";","export default \" \\n<!-- <ion-content class=\\\"color-bg\\\">\\n\\n  <div class=\\\"auth-box\\\">\\n    <div class=\\\"title-header\\\">\\n      <img src=\\\"assets/login-bg.svg\\\" alt=\\\"\\\">\\n    </div>\\n    <h2 class=\\\"text-center\\\">Login to Continue</h2>\\n    <form [formGroup]=\\\"credentialForm\\\">\\n      <ion-item>\\n        <ion-input\\n          placeholder=\\\"Email address\\\"\\n          formControlName=\\\"email\\\"\\n          autofocus=\\\"true\\\"\\n          clearInput=\\\"true\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"(email.dirty || email.touched) && email.errors\\\" class=\\\"errors\\\">\\n        <span *ngIf=\\\"email.errors?.required\\\">Email is required</span>\\n        <span *ngIf=\\\"email.errors?.email\\\">Email is invalid</span>\\n      </div>\\n  \\n      <ion-item>\\n        <ion-input\\n        placeholder=\\\"Password\\\"\\n        type=\\\"password\\\"\\n        formControlName=\\\"password\\\"\\n        clearInput=\\\"true\\\"\\n      ></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"(password.dirty || password.touched) && password.errors\\\" class=\\\"errors\\\">\\n        <span *ngIf=\\\"password.errors?.required\\\">Password is required</span>\\n        <span *ngIf=\\\"password.errors?.minlength\\\">Password needs to be 6 characters</span>\\n      </div>\\n\\n      <ion-button expand=\\\"block\\\" color=\\\"primary\\\" class=\\\"mb15\\\" mode=\\\"md\\\" (click)=\\\"signIn()\\\">Login</ion-button>\\n\\n      \\n      <ion-button fill=\\\"clear\\\" expand=\\\"block\\\" class=\\\"btn-link-dark mb30 \\\" (click)=\\\"confirmPasscode()\\\">Sign Up</ion-button>\\n    </form>\\n  </div>\\n </ion-content> -->\\n\\n<ion-content>\\n\\n  <div class=\\\"content-area\\\">\\n    <img src=\\\"assets/login-img.svg\\\" alt=\\\"\\\" class=\\\"login-img\\\">\\n    <h2>Login to Continue</h2>\\n    <p>Provide your email address/phone and password to continue</p>\\n  </div>\\n\\n  <div class=\\\"content-area\\\">\\n\\n    <form [formGroup]=\\\"credentialForm\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email/Phone</ion-label>\\n        <ion-input formControlName=\\\"email\\\" autofocus=\\\"true\\\" clearInput=\\\"true\\\">\\n        </ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"(email.dirty || email.touched) && email.errors\\\" class=\\\"errors\\\">\\n        <span *ngIf=\\\"email.errors?.required\\\">Email is required</span>\\n        <span *ngIf=\\\"email.errors?.email\\\">Email is invalid</span>\\n      </div>\\n    \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" clearInput=\\\"true\\\"></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"(password.dirty || password.touched) && password.errors\\\" class=\\\"errors\\\">\\n        <span *ngIf=\\\"password.errors?.required\\\">Password is required</span>\\n        <span *ngIf=\\\"password.errors?.minlength\\\">Password needs to be 6 characters</span>\\n      </div>\\n    \\n      <div class=\\\"content-area\\\">\\n        <!-- <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"signIn()\\\">Login to Continue</ion-button> -->\\n        <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"checkLogin()\\\">Login to Continue</ion-button>\\n      </div>\\n    \\n      <!-- <div class=\\\"content-area\\\">\\n        <ion-button fill=\\\"clear\\\" expand=\\\"block\\\"  routerLink=\\\"/en-register\\\">New User? Register Here\\n        </ion-button>\\n      </div> -->\\n    \\n    </form>\\n    \\n  </div>\\n\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EnLoginPage } from './en-login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EnLoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EnLoginPageRoutingModule {}\n"]}