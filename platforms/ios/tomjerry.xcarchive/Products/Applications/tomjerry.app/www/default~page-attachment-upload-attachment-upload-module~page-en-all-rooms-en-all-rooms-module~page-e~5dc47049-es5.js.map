{"version":3,"sources":["webpack:///src/app/services/my-connecter.service.ts"],"names":["MyConnecterService","httpClient","afs","toastCtrl","router","authUser","authUser$","asObservable","loggedInUser","allUser","allUser$","oldChats","oldChats$","currentChat","currentChat$","REST_API_SERVER_URL","httpOptions","headers","localStorage","getItem","undefined","JSON","parse","next","_username","_password","collection","ref","where","valueChanges","idField","subscribe","data","u","length","setItem","stringify","userId","presentToast","msg","create","message","duration","toast","present","removeItem","id","orderBy","snapshotChanges","pipe","actions","map","a","payload","doc","user_group_key","getOneGroup","changes","group_id","email","resultArray","Object","keys","index","person","val","id1","arr1","id2","arr2","members","Promise","resolve","reject","add","then","res","nwAr","chat_id","uid","push","nwAr2","updateUserChatDat1","updateUserChatDat2","err","chatId","arr","update","personal_chats","gotToPage","setTimeout","navigate","ms","users","updateUserChatGroup","ceatedAt","Date","getTime","cId","msgId","lastMsg","last_message","authuserId","msgCount","msgBy","visible_user_array","message_count","message_by_name","get","querySnap","forEach","visible_name","console","log","docs","token","fcm_token","handleError","error","ErrorEvent","statusText","createId","set","element","updateTimeOnChat","now","groupId","time","groupInfo","find","chatupdated_at","providedIn"],"mappings":"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","file":"default~page-attachment-upload-attachment-upload-module~page-en-all-rooms-en-all-rooms-module~page-e~5dc47049-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n// import { AngularFirestoreCollection } from 'angularfire2/firestore';\n// import { AngularFireDatabase } from 'angularfire2/database';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { take, retry, map, tap, filter, find, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Alert } from 'selenium-webdriver';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyConnecterService {\n\n  private authUser = new BehaviorSubject<any>(null);\n  public authUser$ = this.authUser.asObservable();\n  loggedInUser = {};\n  \n  private allUser = new BehaviorSubject<any>(null);\n  public allUser$ = this.allUser.asObservable();\n  \n  private oldChats = new BehaviorSubject<any>(null);\n  public oldChats$ = this.oldChats.asObservable();\n  \n  private currentChat = new BehaviorSubject<any>(null);\n  public currentChat$ = this.currentChat.asObservable();\n  userId:any;\n  userArray:any;\n  contactsSub: Subscription;\n  private REST_API_SERVER_URL = \"https://networkdemo.in/firebase.php?token=\";\n\n  \n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      //'strictSSL': false\n          // 'Content-Type':  'application/json'\n    })\n  };\n  \n  constructor(private httpClient: HttpClient,private afs: AngularFirestore, public toastCtrl: ToastController, private router: Router) { \n    /*Auth*/\n    if (localStorage.getItem(\"chat-user\") === null || localStorage.getItem(\"chat-user\") === undefined) { }\n    else {\n      this.loggedInUser = JSON.parse(localStorage.getItem('chat-user'));\n    } \n    this.authUser.next(this.loggedInUser);\n\n    this.oldChats.next([]);\n  }\n\n  userLogin(_username, _password) {\n    this.afs.collection('employee', ref => ref.where('email', '==', _username).where('password', '==', _password))\n    .valueChanges({ idField: 'id' }).subscribe( data => {\n      var u: any = data;\n      // console.log(data);\n      if(data && data.length) {\n        this.loggedInUser = data[0];\n        localStorage.setItem('chat-user', JSON.stringify(this.loggedInUser));\n        this.authUser.next(this.loggedInUser);\n        this.userId = data[0]['uid'];\n        localStorage.setItem(\"userId\", this.userId);\n        localStorage.setItem(\"userFriends\", data[0]['personal_chats']);\n      }\n      else {\n        this.presentToast('Credential Mismatch');\n      }\n    });\n  }\n\n  async presentToast(msg) {\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  public removeAuth() { \n    var data = {};\n    localStorage.removeItem('chat-user');\n    this.authUser.next(data);\n  }\n\n  getGroups(id) {\n    // eturn this.firestore.collection('employee', ref => ref.orderBy('name', 'desc')).snapshotChanges();\n    const collection = this.afs.collection(`employee/${id}/groups`, ref => ref\n      .orderBy('ceatedAt','desc'));\n    return collection.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data();\n        const user_group_key = a.payload.doc.id;\n        // console.log(\"user_group_key :\" +user_group_key )\n        // console.log(\"all-rooms-data :\" + JSON.stringify(data))\n        return this.getOneGroup(data['chatId'], user_group_key);\n      }))\n    )   \n\n\n    // this.afs.collection(`employee/${id}/groups`).valueChanges({ idField: 'id' }).subscribe( data => {\n    //   var u: any = data;\n    //   console.log(data);\n    //   // if(data && data.length) {\n    //   //   this.loggedInUser = data[0];\n    //   //   localStorage.setItem('chat-user', JSON.stringify(this.loggedInUser));\n    //   //   this.authUser.next(this.loggedInUser);\n    //   // }\n    //   // else {\n    //   //   this.presentToast('Credential Mismatch');\n    //   // }\n    // });\n\n \n  }\n\n  getOneGroup(id, user_group_key = null) {\n    \n    return this.afs.doc(`conversations/${id}`).snapshotChanges().pipe(\n      take(1),\n      map(changes => {\n        const data = changes.payload.data() as {};\n        const group_id = changes.payload.id;\n        return { user_group_key, id: group_id, ...data }; \n      })\n    )\n  }\n\n  fetchChats(id) {\n      this.afs.collection(`conversations/${id}/messages`, ref => ref\n      .orderBy('createAt', 'asc'))\n      .valueChanges({ idField: 'id' }).subscribe(data => {\n        if (data && data.length) {\n          this.oldChats.next(data);\n        }\n        else {\n          this.oldChats.next([]);\n        }\n      });\n\n    this.afs.collection('conversations').doc(id)\n      .valueChanges({ idField: 'id' }).subscribe(data => {\n        this.currentChat.next(data);\n      });\n  }\n\n  \n  fetchUsers(email) {\n\n    this.afs.collection('employee', ref => ref.where('email', '!=', email))\n    .valueChanges({ idField: 'id' }).subscribe( data => {\n      if(data && data.length) {\n        const resultArray = Object.keys(data).map(index => {\n          let person = data[index];\n          return person;\n        });\n        // console.log(resultArray);\n        this.allUser.next(resultArray);\n      }\n    });\n\n  }\n\n  \n  createNewChat(val, id1, arr1, id2, arr2) {\n    var members = [];\n    \n    return new Promise<any>((resolve, reject) =>{\n      this.afs.collection('conversations').add(val).then(res => {\n        var nwAr = {\n          chat_id: res.id,\n          uid: id2\n        }\n        arr1.push(nwAr)\n        \n        var nwAr2 = {\n          chat_id: res.id,\n          uid: id1\n        }\n        arr2.push(nwAr2)\n\n        this.updateUserChatDat1(res.id,id1, arr1);\n        this.updateUserChatDat2(res.id,id2, arr2,res);\n\n      }, err => reject(err));\n    });  \n\n\n  }\n  \n  public updateUserChatDat1(chatId,id, arr) {    \n    this.afs.doc(`employee/${id}`).update({personal_chats: arr});\n    this.afs.collection(`employee/${id}/groups`).add( {chatId} );\n  }\n\n  public updateUserChatDat2(chatId,id, arr,res) {    \n    this.afs.doc(`employee/${id}`).update({personal_chats: arr});\n    this.afs.collection(`employee/${id}/groups`).add( {chatId} );\n    this.gotToPage(res);\n  }\n\n   gotToPage(res){\n      setTimeout(() => this.router.navigate([`/single-user-chat/${res.id}`]),2500); // 2000 is millisecond\n  }\n\n  async delay(ms: number,res) {\n    await new Promise<void>(resolve => setTimeout(()=>resolve(), ms)).then(()=>this.router.navigate([`/single-user-chat/${res.id}`]));\n  }\n\n\n\n  createNewChatGroup(val, users) {\n    var members = [];\n    \n    return new Promise<any>((resolve, reject) =>{\n      this.afs.collection('conversations').add(val).then(res => {\n       \n        for (let index = 0; index < users.length; index++) {\n          this.updateUserChatGroup(res.id, users[index]);          \n        }\n        \n        this.router.navigate([`/single-user-chat/${res.id}`]);\n      }, err => reject(err));\n    });  \n\n\n  }\n  \n  public updateUserChatGroup(chatId,id) {    \n    this.afs.collection(`employee/${id}/groups`).add({ chatId: chatId, ceatedAt: new Date().getTime() } );\n  }\n  \n \n\n  deleteMessage(cId, msgId) {\n    /* this.afs.collection('conversations/' + cId + '/messages').doc(msgId).update({\n      delete: true,\n      deletedBy: this.userId\n    }) */\n\n    this.afs.doc(`conversations/${cId}/messages/${msgId}`).update({ \n      delete: true\n     });\n  }\n\n  updateLastMessage(id,lastMsg){\n    this.afs.doc(`conversations/${id}`).update({ last_message: lastMsg });\n\n  }\n\n  createNewUser(val, email) {    \n    this.afs.collection('employee', ref => ref.where('email', '==', email))\n    .valueChanges({ idField: 'id' }).subscribe( data => {\n      // console.log(data)\n      if(data && data.length) {\n        this.router.navigate([`/en-login/`]);\n      }\n      else {\n        \n        this.presentToast('User added');\n        this.afs.collection(`employee`).add( val );\n        this.router.navigate([`/en-login/`]);\n\n      }\n    });    \n  }\n  \n  createNewMessage(val, id, lastMsg,ceatedAt,authuserId,msgCount,msgBy,visible_user_array) {\n    var members = [];\n    return new Promise<any>((resolve, reject) =>{\n      this.afs.collection(`/conversations/${id}/messages`).add(val).then(res => {   \n        // console.log(\"msgId : \"+JSON.stringify(res))     \n        this.afs.doc(`conversations/${id}`).update({ last_message: lastMsg,message_count:msgCount,message_by_name:msgBy, ceatedAt: new Date().getTime()});\n\n        this.afs.collection(`employee/${authuserId}/groups`, ref => ref.where('chatId', '==', id)).get().subscribe((querySnap) => {\n          querySnap.forEach((doc)=>{\n            // console.log(doc.id)\n            this.afs.doc(`employee/${authuserId}/groups/${doc.id}`).update({ ceatedAt: new Date().getTime()});\n            this.afs.doc(`conversations/${id}`).update({visible_name:visible_user_array});\n          })\n          console.log(querySnap.docs)\n        })      \n      }, err => reject(err));\n    });  \n\n  }\n\n  updateUserFcmToken(id,token){\n    this.afs.doc(`employee/${id}`).update({ fcm_token: token });\n  }\n\n  messageSeenBy(id,visible_user_array) {\n    this.afs.doc(`conversations/${id}`).update({visible_name:visible_user_array});\n  }\n\n  sendFirebasePush(token:any){\n    return this.httpClient.get(this.REST_API_SERVER_URL+token, this.httpOptions) \n      .pipe(\n        catchError(this.handleError)\n      );\n    // https://networkdemo.in/firebase.php?token=eEmXPgp1RSeTDYCKpUyGAA:APA91bFq4aNYQA9qtXoKacstxeF6ayi8OeAscc8mE-Lwyz6uQb43gYfYc4Fnr6aOi0hI4VASMskiSVleJ_IVpF-xkoXJd5lMucViHfyeOIJBAzc9Eps9gKmhwvQe4DnEGtWuvd14jrmf\n  }\n  private handleError(error: HttpErrorResponse) { \n\t\tvar msg: any = 'Something bad happened; please try again later.';\t\t\n\t  if (error.error instanceof ErrorEvent) {\n\t    msg = error.message ? error.message : error.error.message;\n\t  } else {\n\t    msg = error.statusText;\n\t  }\n\t  return throwError(msg);\n\t}\n\n  copycreateNewMessage(val, id, lastMsg) {\n    var members = [];\n    const msgId=this.afs.createId();\n    return new Promise<any>((resolve, reject) => {\n      this.afs.collection(`/conversations/${id}/messages`).doc(msgId).set(val).then(res => {\n        this.afs.doc(`conversations/${id}`).update({ last_message: lastMsg });\n\n       val.users.forEach(element => {\n          this.updateTimeOnChat(element.uid,msgId, Date.now())\n        });\n\n      }, err => reject(err));\n    });\n\n  }\n\n\n  updateTimeOnChat(id,groupId, time) {\n    console.log(\"begin_groupid \", groupId)\n   /*  return new Promise<any>((resolve, reject) => {\n      this.afs.doc(`employee/${id}/groups`).update({ updated_at: time });\n    }); */\n    const collection = this.afs.collection(`employee/${id}/groups`);\n    return collection.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        // console.log(\"groupId\", a.payload.doc.id)\n        const data:any = a.payload.doc.data();\n        return{\n          id:a.payload.doc.id,\n        \n          ...data\n        }\n        \n      }))\n      )\n      .subscribe(res=>{\n        console.log(\"inside_subs : \",res)\n        const groupInfo= res.find((data: any) => data.chatId === groupId)\n        if (groupInfo) {\n          console.log(\"groupId : \" + groupInfo.id)\n          return this.afs.doc(`employee/${id}/groups/${groupInfo.id}`).update({ chatupdated_at: time })\n            .then(res => { })\n            .catch(err => { console.log(\"Error while update time on chat\" + err) })\n        }\n        \n      })\n\n    \n  }\n  \n}\n"]}