{"version":3,"sources":["./src/app/services/en-data.service.ts"],"names":[],"mappings":"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","file":"default~page-en-chat-en-chat-module~page-en-create-room-en-create-room-module~page-en-login-en-login~bdbac243-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n// import { AngularFirestore } from '@angular/fire/firestore';\n// import * as firebase from 'firebase/app';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { take, switchMap, map, timestamp } from 'rxjs/operators';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\n\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/storage';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { finalize, tap } from 'rxjs/operators';\n\n\n \nexport interface User {\n  uid: string;\n  email: string;\n}\nexport interface MyData {\n  name: string;\n  filepath: string;\n  size: number;\n}\n\nexport interface Message {\n  createdAt: firebase.firestore.FieldValue;\n  id: string;\n  from: string;\n  msg: string;\n  fromName: string;\n  myMsg: boolean;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnDataService {\n\n  task: AngularFireUploadTask;\n  percentage: Observable<number>;\n  snapshot: Observable<any>;\n  UploadedFileURL: Observable<string>;\n  images: Observable<MyData[]>;\n  fileName:string;\n  fileSize:number;\n  isUploading:boolean;\n  isUploaded:boolean;\n  private imageCollection: AngularFirestoreCollection<MyData>;\n  \n  private addedUser = new BehaviorSubject<any>(null);\n  public addedUser$ = this.addedUser.asObservable();\n\n  private authToken = new BehaviorSubject<any>(null);\n  public authToken$ = this.authToken.asObservable();\n  loggedInUserToken: string = null;\n  \n\n  currentUser: User = null;\n  constructor(private afAuth: AngularFireAuth, private afs: AngularFirestore, private storage: AngularFireStorage) { \n    this.afAuth.onAuthStateChanged((user) => {\n      //console.log(user);\n      if (user!=null) {\n        this.currentUser = user;\n      }         \n    });\n\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.imageCollection = afs.collection<MyData>('freakyImages');\n    this.images = this.imageCollection.valueChanges();\n\n    if (localStorage.getItem(\"currentUser\") === null || localStorage.getItem(\"currentUser\") === undefined) {\n      this.loggedInUserToken=\"\";\n     }\n    else {\n      this.loggedInUserToken = localStorage.getItem('currentUser');\n    }\n    this.authToken.next(this.loggedInUserToken);\n  }\n\n  async signup({ email, password, nickname, company }): Promise<any> {\n    const credential = await this.afAuth.createUserWithEmailAndPassword(\n      email,\n      password\n    );\n \n    const uid = credential.user.uid;\n \n    return this.afs.doc(\n      `users/${uid}`\n    ).set({\n      uid,\n      email: credential.user.email,\n      nickname: nickname,\n      company: company,\n      id: uid\n    })\n  }\n\n  signIn({ email, password }) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  signOut(): Promise<void> {\n    return this.afAuth.signOut();\n  }\n\n  resetPw(email) {\n    //return this.afAuth.auth.sendPasswordResetEmail(email);\n  }\n      \n  getUsers() {\n    // console.log(this.currentUser.uid)\n    return this.afs.collection('users', ref => ref.where('uid', '!=', this.currentUser.uid)).valueChanges({ idField: 'uid' }).subscribe(\n      data => {\n        this.addedUser.next(data);\n      });\n  }\n   \n  private getUserForMsg(msgFromId, users: User[]): string {    \n    for (let usr of users) {\n      if (usr.uid == msgFromId) {\n        return usr.email;\n      }\n    }\n    return 'Deleted';\n  }\n  \n  getGroups() {\n    const userId = localStorage.getItem('currentUser');\n   /*  if (this.currentUser!=null) {\n      return this.afs.collection(`users/${this.currentUser.uid}/groups`).snapshotChanges().pipe(\n        map(actions => actions.map(a => {\n          const data = a.payload.doc.data();\n          const user_group_key = a.payload.doc.id;\n          return this.getOneGroup(data['id'], user_group_key);\n        }))\n      )\n    }  */\n\n    if (userId != null) {\n      return this.afs.collection(`users/${userId}/groups`,ref => ref.orderBy('createdAt')).snapshotChanges().pipe(\n        map(actions => actions.map(a => {\n          const data = a.payload.doc.data();\n          const user_group_key = a.payload.doc.id;\n          return this.getOneGroup(data['id'], user_group_key);\n        }))\n      )\n    }\n    \n  }\n\n  getOneGroup(id, user_group_key = null) {\n    return this.afs.doc(`groups/${id}`).snapshotChanges().pipe(\n      take(1),\n      map(changes => {\n        const data = changes.payload.data() as {};\n        const group_id = changes.payload.id;\n        return { user_group_key, id: group_id, ...data }; \n      })\n    )\n  }\n\n  findUser(value) {\n    let email = this.afs.collection('users', ref => ref.where('email', '==', value)).snapshotChanges().pipe(\n      take(1),\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return { id, data };\n      }))\n    );\n    let nickname = this.afs.collection('users', ref => ref.where('nickname', '==', value)).snapshotChanges().pipe(\n      take(1),\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return { id, data };\n      }))\n    );\n    return [email, nickname];\n  }\n\n  createGroup(group, title, users, emails) {\n    let current = {\n      email: this.currentUser.email,\n      id: this.currentUser.uid,\n      uid: this.currentUser.uid,\n      nickname: 'owner',\n      createdAt: new Date().getTime()\n\n    };\n\n    // let allUsers = [current, users];\n    //users.push(current)\n    if(!group) {\n      title = emails.toString().replace(\",\", \" - \");\n    }\n    // emails.push(this.currentUser.email)\n\n    return this.afs.collection('groups').add({\n      title: title,\n      users: users,\n      group: group,\n      emails: emails\n\n    }).then(res => {\n      let promises = [];\n      //console.log(users);\n      for (let usr of users) {\n        let oneAdd = this.afs.collection(`users/${usr.uid}/groups`).add({\n          id: res.id\n        });\n        promises.push(oneAdd);\n\n      }\n      return Promise.all(promises);\n    })\n  }\n  \n  getChatMessages(groupId) {\n    return this.afs.collection(`groups/${groupId}/messages`, ref => ref.orderBy('createdAt')).snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as {};\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n  // Chat functionality\n\n  addOneChatMessage(msg,sender_id) {\n    return this.afs.collection('messages').add({\n      msg: msg,\n      sender_id: sender_id,\n      from: this.currentUser.uid,\n      createdAt: firebase.firestore.Timestamp.now()\n      // createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n  }\n\n  getOneChatMessages() {\n    let users = [];\n    return this.getOneUsers().pipe(\n      switchMap(res => {\n        users = res;\n        console.log(users);\n        return this.afs.collection('messages', ref => ref.orderBy('createdAt')).valueChanges({ idField: 'id' }) as Observable<Message[]>;\n      }),\n      map(messages => {\n        // Get the real name for each user\n        for (let m of messages) {\n          m.fromName = this.getOneUserForMsg(m.from, users);\n          m.myMsg = this.currentUser.uid === m.from;\n        }\n        return messages\n      })\n    )\n  }\n\n  private getOneUsers() {\n    return this.afs.collection('users').valueChanges({ idField: 'uid' }) as Observable<User[]>;\n  }\n\n\n  private getOneUserForMsg(msgFromId, users: User[]): string {\n    for (let usr of users) {\n      if (usr.uid == msgFromId) {\n        return usr.email;\n      }\n    }\n    return 'Deleted';\n  }\n\n  addChatMessage(msg, chatId, users) {\n    // return this.afs.collection('groups/' + chatId + '/messages').add({\n    //   msg: msg,\n    //   from: this.currentUser.uid,\n    //   createdAt: new Date().getTime()\n    // });\n    //console.log(users);\n    return this.afs.collection('groups/' + chatId + '/messages').add({\n      msg: msg,\n      messageType: 'text',\n      from: this.currentUser.uid,\n      createdAt: new Date().getTime()\n    }).then(res => {\n      this.afs.collection('groups').doc(chatId).update({\n        last_text: msg,\n        users: users\n      })\n      let promises = [];\n      return Promise.all(promises);\n    })\n\n  }\n\n\n  deleteMessage(gId, msgId) {\n    this.afs.collection('groups/'+gId+'/messages').doc(msgId).update({\n      delete: true,\n      deletedBy: this.currentUser.uid\n    })\n  }\n\n  uploadFile(event: FileList) {\n    const file = event.item(0) \n    // Validation for Images Only\n    if (file.type.split('/')[0] !== 'image') { \n      console.error('unsupported file type :( ')\n      return;\n    } \n    this.isUploading = true;\n    this.isUploaded = false; \n    this.fileName = file.name;\n    const path = `freakyStorage/${new Date().getTime()}_${file.name}`;\n    const customMetadata = { app: 'Freaky Image Upload Demo' };\n    const fileRef = this.storage.ref(path);\n    this.task = this.storage.upload(path, file, { customMetadata });\n    this.percentage = this.task.percentageChanges();\n    this.snapshot = this.task.snapshotChanges().pipe(\n      finalize(() => {\n        // Get uploaded file storage path\n        this.UploadedFileURL = fileRef.getDownloadURL();        \n        this.UploadedFileURL.subscribe(resp=>{\n          this.addImagetoDB({\n            name: file.name,\n            filepath: resp,\n            size: this.fileSize\n          });\n          this.isUploading = false;\n          this.isUploaded = true;\n        },error=>{\n          console.error(error);\n        })\n      }),\n      tap(snap => {\n          this.fileSize = snap.totalBytes;\n      })\n    )\n  }\n \n  addImagetoDB(image: MyData) {\n    //Create an ID for document\n    const id = this.afs.createId();\n    this.imageCollection.doc(id).set(image).then(resp => {\n      console.log(resp);\n    }).catch(error => {\n      console.log(\"error \" + error);\n    });\n  }\n\n/*   addOneOnOneChatMessage(msg) {\n    return this.afs.collection('messages').add({\n      msg: msg,\n      from: this.currentUser.uid,\n      createdAt: firebase.afs.FieldValue.serverTimestamp()\n    });\n  } */\n\n  addOneOnOneChatMessage(msg, chatId, users) {\n    // return this.afs.collection('groups/' + chatId + '/messages').add({\n    //   msg: msg,\n    //   from: this.currentUser.uid,\n    //   createdAt: new Date().getTime()\n    // });\n    //console.log(users);\n    return this.afs.collection('groups/' + chatId + '/messages').add({\n      msg: msg,\n      messageType: 'text',\n      from: this.currentUser.uid,\n      createdAt: new Date().getTime()\n    }).then(res => {\n      this.afs.collection('users').doc(chatId).update({\n        last_text: msg,\n        users: users\n      })\n      let promises = [];\n      return Promise.all(promises);\n    })\n\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}